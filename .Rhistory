all_DEGs <- list()
#run DEG analysis for each comparison
for (i in seq(1:length(comparisons))){
metacolumn <- comparisons[[i]][1]
condition1 <- comparisons[[i]][3]
condition2 <- comparisons[[i]][2]
coef <- paste0(metacolumn,'_',condition2,'_vs_',condition1)
print(coef)
dir_name <- paste0(condition1,'_negFC vs ', condition2,'_posFC')
#make an output dir for all the files and analysis for each comparison
comparison_combi_dir <- paste(figure_dir ,dir_name, sep = '/')
dir.create(file.path(comparison_combi_dir), showWarnings = FALSE)
if (!coef %in% resultsNames(dds)){
dds[[metacolumn]] <- relevel(dds[[metacolumn]], ref = condition1)#relevel object to condition 1
dds <- nbinomWaldTest(dds)#rerun the nbegative binomal wald test to enable apeglm shrinkage for specific comparison
}
res <- lfcShrink(dds, coef=coef, type="apeglm")
write.table(as.data.frame(res), file= paste(comparison_combi_dir,"/all_genes.csv",sep=""), sep = ',')
#filter DEGS
diff_genes <- subset(res, padj < as.numeric(DEG_pval_cutoff))
diff_genes <- subset(diff_genes, log2FoldChange > as.numeric(DEG_log2FC_cutoff) | log2FoldChange < -1*as.numeric(DEG_log2FC_cutoff))
diff_genes <- as.data.frame(diff_genes)
write.table(as.data.frame(diff_genes), file= paste(comparison_combi_dir,"/DEGs.csv",sep=""), sep = ';', row.names = T)
all_DEGs <- append(all_DEGs, row.names(diff_genes)) #add all DEG genes
DEGS_up <- diff_genes[diff_genes$log2FoldChange > 0,]
DEGS_dwn <- diff_genes[diff_genes$log2FoldChange < 0,]
#make a volcano plot, blegh
vulcano_plot <- EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
title = dir_name,
pCutoff = as.numeric(DEG_pval_cutoff),
FCcutoff = as.numeric(DEG_log2FC_cutoff),
xlab = bquote(~Log[2]~ 'fold change'),
pointSize = 4.0,
labSize = 6.0,
colAlpha = 1,
legendPosition = 'right',
legendLabSize = 12,
legendIconSize = 4.0,
drawConnectors = TRUE,
widthConnectors = 0.75
)
pdf(paste0(comparison_combi_dir,'/Differential_genes_vulcano.pdf') ,width=12,height=12,paper='special')
print(vulcano_plot)
dev.off()
#run GO term enrichment for the DEGS
if(!file.exists(paste0(comparison_combi_dir,'/GO_all_DEGS.csv'))){GOenr_simplified(gene_list = rownames(diff_genes),
output_file = paste0(comparison_combi_dir,'/GO_all_DEGS'),
res,
dds,
fill_annotation = 'disease',
x_axis_annotation = 'timepoint',
simplify_value = 0.6)}
if(!file.exists(paste0(comparison_combi_dir,'/GO_DEGS_high_',condition2,'.csv'))){GOenr_simplified(gene_list = rownames(DEGS_up),
output_file = paste0(comparison_combi_dir,'/GO_DEGS_high_',condition2),
res,
dds,
fill_annotation = 'disease',
x_axis_annotation = 'timepoint',
simplify_value = 0.6)}
if(!file.exists(paste0(comparison_combi_dir,'/GO_DEGS_high_',condition1,'.csv'))){GOenr_simplified(gene_list = rownames(DEGS_dwn),
output_file = paste0(comparison_combi_dir,'/GO_DEGS_high',condition1),
res,
dds,
fill_annotation = 'disease',
x_axis_annotation = 'timepoint',
simplify_value = 0.6)
}
}
dds$time_disease
comparisons = list(
#wild type differentiation DEGS
c('time_disease', 'wt_d15', 'wt_d0'),#wt d0 vs wt d15
c('time_disease', 'wt_d25','wt_d15'),#wt d15 vs wt d25
c('time_disease', 'wt_d25','wt_LSC'),#wt d25 vs wt
#wt-aniridia differences DEGS
c('time_disease','an_d0', 'wt_d0'),
c('time_disease','an_d15','wt_d15'),
c('time_disease','an_d25','wt_d25')
)
DEG_pval_cutoff <- 0.01
DEG_log2FC_cutoff <- 0.58
all_DEGs <- list()
#run DEG analysis for each comparison
for (i in seq(1:length(comparisons))){
metacolumn <- comparisons[[i]][1]
condition1 <- comparisons[[i]][3]
condition2 <- comparisons[[i]][2]
coef <- paste0(metacolumn,'_',condition2,'_vs_',condition1)
print(coef)
dir_name <- paste0(condition1,'_negFC vs ', condition2,'_posFC')
#make an output dir for all the files and analysis for each comparison
comparison_combi_dir <- paste(figure_dir ,dir_name, sep = '/')
dir.create(file.path(comparison_combi_dir), showWarnings = FALSE)
if (!coef %in% resultsNames(dds)){
dds[[metacolumn]] <- relevel(dds[[metacolumn]], ref = condition1)#relevel object to condition 1
dds <- nbinomWaldTest(dds)#rerun the nbegative binomal wald test to enable apeglm shrinkage for specific comparison
}
res <- lfcShrink(dds, coef=coef, type="apeglm")
write.table(as.data.frame(res), file= paste(comparison_combi_dir,"/all_genes.csv",sep=""), sep = ',')
#filter DEGS
diff_genes <- subset(res, padj < as.numeric(DEG_pval_cutoff))
diff_genes <- subset(diff_genes, log2FoldChange > as.numeric(DEG_log2FC_cutoff) | log2FoldChange < -1*as.numeric(DEG_log2FC_cutoff))
diff_genes <- as.data.frame(diff_genes)
write.table(as.data.frame(diff_genes), file= paste(comparison_combi_dir,"/DEGs.csv",sep=""), sep = ';', row.names = T)
all_DEGs <- append(all_DEGs, row.names(diff_genes)) #add all DEG genes
DEGS_up <- diff_genes[diff_genes$log2FoldChange > 0,]
DEGS_dwn <- diff_genes[diff_genes$log2FoldChange < 0,]
#make a volcano plot, blegh
vulcano_plot <- EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
title = dir_name,
pCutoff = as.numeric(DEG_pval_cutoff),
FCcutoff = as.numeric(DEG_log2FC_cutoff),
xlab = bquote(~Log[2]~ 'fold change'),
pointSize = 4.0,
labSize = 6.0,
colAlpha = 1,
legendPosition = 'right',
legendLabSize = 12,
legendIconSize = 4.0,
drawConnectors = TRUE,
widthConnectors = 0.75
)
pdf(paste0(comparison_combi_dir,'/Differential_genes_vulcano.pdf') ,width=12,height=12,paper='special')
print(vulcano_plot)
dev.off()
#run GO term enrichment for the DEGS
if(!file.exists(paste0(comparison_combi_dir,'/GO_all_DEGS.csv'))){GOenr_simplified(gene_list = rownames(diff_genes),
output_file = paste0(comparison_combi_dir,'/GO_all_DEGS'),
res,
dds,
fill_annotation = 'disease',
x_axis_annotation = 'timepoint',
simplify_value = 0.6)}
if(!file.exists(paste0(comparison_combi_dir,'/GO_DEGS_high_',condition2,'.csv'))){GOenr_simplified(gene_list = rownames(DEGS_up),
output_file = paste0(comparison_combi_dir,'/GO_DEGS_high_',condition2),
res,
dds,
fill_annotation = 'disease',
x_axis_annotation = 'timepoint',
simplify_value = 0.6)}
if(!file.exists(paste0(comparison_combi_dir,'/GO_DEGS_high_',condition1,'.csv'))){GOenr_simplified(gene_list = rownames(DEGS_dwn),
output_file = paste0(comparison_combi_dir,'/GO_DEGS_high',condition1),
res,
dds,
fill_annotation = 'disease',
x_axis_annotation = 'timepoint',
simplify_value = 0.6)}
}
#generate a heatmap of the differential genes
output_filename <-  paste0(comparison_combi_dir,'/DEG_heatmap.pdf')
mat <- assay(rld)[row.names(diff_genes), ]
mat <- assay(rlog)[row.names(diff_genes), ]
mat <- scale(mat)
rlog[['genotype']]
ha = ComplexHeatmap::rowAnnotation(annotation1 = rlog[['genotype']],
annotation2 = rlog[['timepoint']])}
#generate a heatmap of the differential genes
output_filename <-  paste0(comparison_combi_dir,'/DEG_heatmap.pdf')
if(!file.exists(output_filename)){
mat <- assay(rlog)[row.names(diff_genes), ]
mat <- scale(mat)
ha = ComplexHeatmap::rowAnnotation(annotation1 = rlog[['genotype']],
annotation2 = rlog[['timepoint']])
RNA_heatmap <- Heatmap(mat,
cluster_columns = T,
cluster_rows = T,
show_row_names = deseq_objects_df[i,]$heatmap_row_names,
top_annotation = column_ha,
row_km = 2,
column_km = 2,
column_km_repeats = 100
)
pdf(paste(comparison_combi_dir,'/DEG_heatmap.pdf',sep="") ,width=8,height=8,paper='special')
print(RNA_heatmap)
dev.off()
}
if(!file.exists(output_filename)){
mat <- assay(rlog)[row.names(diff_genes), ]
mat <- scale(mat)
ha = ComplexHeatmap::rowAnnotation(annotation1 = rlog[['genotype']],
annotation2 = rlog[['timepoint']])
RNA_heatmap <- ComplexHeatmap::Heatmap(mat,
cluster_columns = T,
cluster_rows = T,
show_row_names = F,
top_annotation = ha,
row_km = 2,
column_km = 2,
column_km_repeats = 100
)
pdf(paste(comparison_combi_dir,'/DEG_heatmap.pdf',sep="") ,width=8,height=8,paper='special')
print(RNA_heatmap)
dev.off()
}
ha = ComplexHeatmap::Annotation(annotation1 = rlog[['genotype']],
annotation2 = rlog[['timepoint']])
ha = ComplexHeatmap::columnAnnotation(annotation1 = rlog[['genotype']],
annotation2 = rlog[['timepoint']])
mat <- assay(rlog)[row.names(diff_genes), ]
mat <- scale(mat)
ha = ComplexHeatmap::columnAnnotation(annotation1 = rlog[['genotype']],
annotation2 = rlog[['timepoint']])
RNA_heatmap <- ComplexHeatmap::Heatmap(mat,
cluster_columns = T,
cluster_rows = T,
show_row_names = F,
top_annotation = ha,
row_km = 2,
column_km = 2,
column_km_repeats = 100
)
pdf(paste(comparison_combi_dir,'/DEG_heatmap.pdf',sep="") ,width=8,height=8,paper='special')
print(RNA_heatmap)
dev.off()
output_filename
mat <- assay(rlog)[row.names(diff_genes), ]
mat <- t(scale(t(mat)))
ha = ComplexHeatmap::columnAnnotation(annotation1 = rlog[['genotype']],
annotation2 = rlog[['timepoint']])
RNA_heatmap <- ComplexHeatmap::Heatmap(mat,
cluster_columns = T,
cluster_rows = T,
show_row_names = F,
top_annotation = ha,
row_km = 2,
column_km = 2,
column_km_repeats = 100
)
pdf(paste(comparison_combi_dir,'/DEG_heatmap.pdf',sep="") ,width=8,height=8,paper='special')
print(RNA_heatmap)
dev.off()
#perform KEGG enrichment
print('running KEGG analysis')
KEGG_dir <- paste0(comparison_combi_dir, '/KEGG')
if(!file.exists(KEGG_dir)){
dir.create(file.path(KEGG_dir), showWarnings = FALSE)
#convert gene IDs, because of course it doesnt accept HUGO
entrezIDs <- AnnotationDbi::select(org.Hs.eg.db,
keys = rownames(res),
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
}
#perform KEGG enrichment
print('running KEGG analysis')
KEGG_dir <- paste0(comparison_combi_dir, '/KEGG')
if(!file.exists(KEGG_dir)){
dir.create(file.path(KEGG_dir), showWarnings = FALSE)
#convert gene IDs, because of course it doesnt accept HUGO
entrezIDs <- AnnotationDbi::select(org.Hs.eg.db::org.Hs.eg.db,
keys = rownames(res),
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
res_entrez <- res
res_entrez$SYMBOL <- rownames(res)
res_entrez <- merge(as.data.frame(res_entrez), entrezIDs, by = 'SYMBOL')
res_entrez <- drop_na(res_entrez)
FC_list_entrez <- res_entrez$log2FoldChange
names(FC_list_entrez) <- as.character(res_entrez$ENTREZID)
geneList_entrez <- sort(FC_list_entrez, decreasing = TRUE)
KEGGenrichment <- gseKEGG(geneList     = geneList_entrez,
organism     = 'hsa',
minGSSize    = 10,
pvalueCutoff = 1,
verbose      = FALSE)
KEGGenrichment <- as.data.frame(KEGGenrichment)
write.table(  KEGGenrichment,row.names = T, col.names= T, file= paste0(KEGG_dir,"/KEGG_results.csv"), sep = ',')
KEGG_df <- KEGGenrichment[c('Description','NES','qvalues')]
KEGG_df <- round_df(KEGG_df, digits = 7)
pdf(file = paste0(KEGG_dir,"/KEGG_results.pdf"), height = 12, width = 26)
grid.table(KEGG_df[1:10,],rows = NULL)
dev.off()
#lets vizualize all pathways that are significant
KEGG_sig <- KEGGenrichment[KEGGenrichment$p.adjust < 0.01,]
setwd(KEGG_dir)
for(k in 1:nrow(KEGG_sig)) {
row_Kegg <- KEGG_sig[k,]
old_filename = paste0(KEGG_dir,'/',row_Kegg$ID,'.pathview.png')
new_filename = paste0(KEGG_dir,'/',gsub(" ", "_", row_Kegg$Description),'.pathview.png')
hsa04668 <- pathview(gene.data  = geneList_entrez,
pathway.id = row_Kegg$ID,
species    = "hsa",
limit      = list(gene=quantile(abs(geneList_entrez), 0.95)),
low = list(gene = 'orange'),
high = list(gnee = 'purple'))
file.rename(old_filename, new_filename)
}
}
#perform KEGG enrichment
print('running KEGG analysis')
KEGG_dir <- paste0(comparison_combi_dir, '/KEGG')
if(!file.exists(KEGG_dir)){
dir.create(file.path(KEGG_dir), showWarnings = FALSE)
#convert gene IDs, because of course it doesnt accept HUGO
entrezIDs <- AnnotationDbi::select(org.Hs.eg.db::org.Hs.eg.db,
keys = rownames(res),
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
res_entrez <- res
res_entrez$SYMBOL <- rownames(res)
res_entrez <- merge(as.data.frame(res_entrez), entrezIDs, by = 'SYMBOL')
res_entrez <- drop_na(res_entrez)
FC_list_entrez <- res_entrez$log2FoldChange
names(FC_list_entrez) <- as.character(res_entrez$ENTREZID)
geneList_entrez <- sort(FC_list_entrez, decreasing = TRUE)
KEGGenrichment <- gseKEGG(geneList     = geneList_entrez,
organism     = 'hsa',
minGSSize    = 10,
pvalueCutoff = 1,
verbose      = FALSE)
KEGGenrichment <- as.data.frame(KEGGenrichment)
write.table(  KEGGenrichment,row.names = T, col.names= T, file= paste0(KEGG_dir,"/KEGG_results.csv"), sep = ',')
KEGG_df <- KEGGenrichment[c('Description','NES','qvalues')]
KEGG_df <- round_df(KEGG_df, digits = 7)
pdf(file = paste0(KEGG_dir,"/KEGG_results.pdf"), height = 12, width = 26)
grid.table(KEGG_df[1:10,],rows = NULL)
dev.off()
#lets vizualize all pathways that are significant
KEGG_sig <- KEGGenrichment[KEGGenrichment$p.adjust < 0.01,]
setwd(KEGG_dir)
for(k in 1:nrow(KEGG_sig)) {
row_Kegg <- KEGG_sig[k,]
old_filename = paste0(KEGG_dir,'/',row_Kegg$ID,'.pathview.png')
new_filename = paste0(KEGG_dir,'/',gsub(" ", "_", row_Kegg$Description),'.pathview.png')
hsa04668 <- pathview(gene.data  = geneList_entrez,
pathway.id = row_Kegg$ID,
species    = "hsa",
limit      = list(gene=quantile(abs(geneList_entrez), 0.95)),
low = list(gene = 'orange'),
high = list(gnee = 'purple'))
file.rename(old_filename, new_filename)
}
}
res_entrez <- tidyr::drop_na(res_entrez)
FC_list_entrez <- res_entrez$log2FoldChange
names(FC_list_entrez) <- as.character(res_entrez$ENTREZID)
geneList_entrez <- sort(FC_list_entrez, decreasing = TRUE)
KEGGenrichment <- gseKEGG(geneList     = geneList_entrez,
organism     = 'hsa',
minGSSize    = 10,
pvalueCutoff = 1,
verbose      = FALSE)
KEGGenrichment <- clusterProfiler::gseKEGG(geneList     = geneList_entrez,
organism     = 'hsa',
minGSSize    = 10,
pvalueCutoff = 1,
verbose      = FALSE)
R.utils::setOption("clusterProfiler.download.method","auto")
KEGGenrichment <- clusterProfiler::gseKEGG(geneList     = geneList_entrez,
organism     = 'hsa',
minGSSize    = 10,
pvalueCutoff = 1,
verbose      = FALSE)
BiocManager::install("clusterProfiler ", force = TRUE)#update none
KEGGenrichment <- clusterProfiler::gseKEGG(geneList     = geneList_entrez,
organism     = 'hsa',
minGSSize    = 10,
pvalueCutoff = 1,
verbose      = FALSE)
library(clusterProfiler)
#R.utils::setOption("clusterProfiler.download.method","auto")
KEGGenrichment <- clusterProfiler::gseKEGG(geneList     = geneList_entrez,
organism     = 'hsa',
minGSSize    = 10,
pvalueCutoff = 1,
verbose      = FALSE)
m_df <- msigdbr(species = "Homo sapiens")
m_df <- msigdbr::msigdbr(species = "Homo sapiens")
GSEA_dir <- paste0(comparison_combi_dir, '/GSEA')
dir.create(file.path(GSEA_dir), showWarnings = FALSE)
m_df <- msigdbr::msigdbr(species = "Homo sapiens")
res_df <- as.data.frame(res)
res_df <- drop_na(res_df)
res_df <- dplyr::drop_na(res_df)
res_df <- tidyr::drop_na(res_df)
FC_list <- res_df$log2FoldChange
names(FC_list) <- as.character(rownames(res_df))
geneList <- sort(FC_list, decreasing = TRUE)
for (database in unique(m_df$gs_cat)){
GSEA_output_dir <- paste(GSEA_dir, database, sep='/' )
dir.create(file.path(GSEA_output_dir), showWarnings = FALSE)
print(database)}
msig_df <- msigdbr(species = "Homo sapiens", category = database) %>%   dplyr::select(gs_name, gene_symbol)
msig_df <- msigdbr::msigdbr(species = "Homo sapiens", category = database) %>%   dplyr::select(gs_name, gene_symbol)
GSEA_results <- clusterProfiler::GSEA(geneList, TERM2GENE = msig_df, pvalueCutoff = 0.1)
write.table(as.data.frame(GSEA_results),row.names = T, col.names= T, file= paste0(paste(GSEA_dir,database,sep = '/'),'_GSEA_res.csv'), sep = ',')
database
GSEA_df <-as.data.frame(GSEA_results)
GSEA_df <- GSEA_df[c('Description','enrichmentScore','qvalues')]
GSEA_df <- round_df(GSEA_df, digits = 9)
gsea_counter = 1
for (sigGSEA in as.data.frame(GSEA_results@result)[1]$ID){
if (gsea_counter > 10){break}
GSEA_plot <- gseaplot2(GSEA_results , geneSetID = gsea_counter, pvalue_table = T)
plotname <- paste0(sigGSEA, '_GSEA_enrichment.pdf')
pdf(paste(GSEA_output_dir,plotname, sep="/"),width=8,height=6,paper='special')
print(GSEA_plot)
gsea_counter = gsea_counter + 1
dev.off()}
GSEA_plot <- clusterProfiler::gseaplot2(GSEA_results , geneSetID = gsea_counter, pvalue_table = T)
GSEA_plot <- enrichplot::gseaplot2(GSEA_results , geneSetID = gsea_counter, pvalue_table = T)
plotname <- paste0(sigGSEA, '_GSEA_enrichment.pdf')
for (sigGSEA in as.data.frame(GSEA_results@result)[1]$ID){
if (gsea_counter > 10){break}
GSEA_plot <- enrichplot::gseaplot2(GSEA_results , geneSetID = gsea_counter, pvalue_table = T)
plotname <- paste0(sigGSEA, '_GSEA_enrichment.pdf')
pdf(paste(GSEA_output_dir,plotname, sep="/"),width=8,height=6,paper='special')
print(GSEA_plot)
gsea_counter = gsea_counter + 1
dev.off()}
GSEA_output_dir
for (sigGSEA in as.data.frame(GSEA_results@result)[1]$ID){
if (gsea_counter > 10){break}
GSEA_plot <- enrichplot::gseaplot2(GSEA_results,
geneSetID = gsea_counter,
pvalue_table = T,
title = paste0(condition1,'                     ',condition2)
)
plotname <- paste0(sigGSEA, '_GSEA_enrichment.pdf')
pdf(paste(GSEA_output_dir,plotname, sep="/"),width=8,height=6,paper='special')
print(GSEA_plot)
gsea_counter = gsea_counter + 1
dev.off()}
for (database in unique(m_df$gs_cat)){
GSEA_output_dir <- paste(GSEA_dir, database, sep='/' )
dir.create(file.path(GSEA_output_dir), showWarnings = FALSE)
print(database)
msig_df <- msigdbr::msigdbr(species = "Homo sapiens", category = database) %>%   dplyr::select(gs_name, gene_symbol)
GSEA_results <- clusterProfiler::GSEA(geneList, TERM2GENE = msig_df, pvalueCutoff = 0.1)
write.table(as.data.frame(GSEA_results),row.names = T, col.names= T, file= paste0(paste(GSEA_dir,database,sep = '/'),'_GSEA_res.csv'), sep = ',')
GSEA_df <-as.data.frame(GSEA_results)
GSEA_df <- GSEA_df[c('Description','enrichmentScore','qvalues')]
gsea_counter = 1
for (sigGSEA in as.data.frame(GSEA_results@result)[1]$ID){
if (gsea_counter > 10){break}
GSEA_plot <- enrichplot::gseaplot2(GSEA_results,
geneSetID = gsea_counter,
pvalue_table = T,
title = paste0(condition1,'                     ',condition2)
)
plotname <- paste0(sigGSEA, '_GSEA_enrichment.pdf')
pdf(paste(GSEA_output_dir,plotname, sep="/"),width=8,height=6,paper='special')
print(GSEA_plot)
gsea_counter = gsea_counter + 1
dev.off()}
for (database in unique(m_df$gs_cat)){
GSEA_output_dir <- paste(GSEA_dir, database, sep='/' )
dir.create(file.path(GSEA_output_dir), showWarnings = FALSE)
print(database)
msig_df <- msigdbr::msigdbr(species = "Homo sapiens", category = database) %>%   dplyr::select(gs_name, gene_symbol)
GSEA_results <- clusterProfiler::GSEA(geneList, TERM2GENE = msig_df, pvalueCutoff = 0.1)
write.table(as.data.frame(GSEA_results),row.names = T, col.names= T, file= paste0(paste(GSEA_dir,database,sep = '/'),'_GSEA_res.csv'), sep = ',')
GSEA_df <-as.data.frame(GSEA_results)
GSEA_df <- GSEA_df[c('Description','enrichmentScore','qvalues')]
gsea_counter = 1
for (sigGSEA in as.data.frame(GSEA_results@result)[1]$ID){
if (gsea_counter > 10){break}
GSEA_plot <- enrichplot::gseaplot2(GSEA_results,
geneSetID = gsea_counter,
pvalue_table = T,
title = paste0(condition1,'                     ',condition2)
)
plotname <- paste0(sigGSEA, '_GSEA_enrichment.pdf')
pdf(paste(GSEA_output_dir,plotname, sep="/"),width=8,height=6,paper='special')
print(GSEA_plot)
gsea_counter = gsea_counter + 1
dev.off()}
}
}
#run GSEA on msigdbr, wikipathways and potentially an costum suplied geneset list
print('running GSEA')
res <- res
GSEA_dir <- paste0(comparison_combi_dir, '/GSEA')
dir.create(file.path(GSEA_dir), showWarnings = FALSE)
m_df <- msigdbr::msigdbr(species = "Homo sapiens")
res_df <- as.data.frame(res)
res_df <- tidyr::drop_na(res_df)
FC_list <- res_df$log2FoldChange
names(FC_list) <- as.character(rownames(res_df))
geneList <- sort(FC_list, decreasing = TRUE)
for (database in unique(m_df$gs_cat)){
GSEA_output_dir <- paste(GSEA_dir, database, sep='/' )
dir.create(file.path(GSEA_output_dir), showWarnings = FALSE)
print(database)
msig_df <- msigdbr::msigdbr(species = "Homo sapiens", category = database) %>%   dplyr::select(gs_name, gene_symbol)
GSEA_results <- clusterProfiler::GSEA(geneList, TERM2GENE = msig_df, pvalueCutoff = 0.1)
write.table(as.data.frame(GSEA_results),row.names = T, col.names= T, file= paste0(paste(GSEA_dir,database,sep = '/'),'_GSEA_res.csv'), sep = ',')
GSEA_df <-as.data.frame(GSEA_results)
GSEA_df <- GSEA_df[c('Description','enrichmentScore','qvalues')]
gsea_counter = 1
for (sigGSEA in as.data.frame(GSEA_results@result)[1]$ID){
if (gsea_counter > 10){break}
GSEA_plot <- enrichplot::gseaplot2(GSEA_results,
geneSetID = gsea_counter,
pvalue_table = T,
title = paste0(condition1,'                     ',condition2)
)
plotname <- paste0(sigGSEA, '_GSEA_enrichment.pdf')
pdf(paste(GSEA_output_dir,plotname, sep="/"),width=8,height=6,paper='special')
print(GSEA_plot)
gsea_counter = gsea_counter + 1
dev.off()}
}
msig_df <- msigdbr::msigdbr(species = "Homo sapiens", category = database) %>%   dplyr::select(gs_name, gene_symbol)
GSEA_results <- clusterProfiler::GSEA(geneList, TERM2GENE = msig_df, pvalueCutoff = 0.1)
m_df
unique(m_df$gs_cat)
